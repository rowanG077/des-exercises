/*
 * generated by Xtext 2.22.0
 */
package persons.tasks.validation;

import org.eclipse.emf.common.util.EList;
import org.eclipse.xtext.validation.Check;

import persons.tasks.taskDSL.Duration;
import persons.tasks.taskDSL.Person;
import persons.tasks.taskDSL.Planning;
import persons.tasks.taskDSL.Task;
import persons.tasks.taskDSL.TaskDSLPackage.Literals;

/**
 * This class contains custom validation rules.
 *
 * See
 * https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
public class TaskDSLValidator extends AbstractTaskDSLValidator {

	@Check
	void checkTimeUnit(Task task) {
		Duration duration = task.getDuration();
		if (duration != null) {
			switch (duration.getUnit()) {
			case MINUTE:
				if (duration.getDl() > 1000) {
					warning("Rewrite to other unit", null);
				}
				break;
			case HOUR:
				break;
			case DAY:
				if (duration.getDl() > 1000) {
					info("Maybe rewrite to weeks", Literals.PERSON__NAME);
				}
				break;
			case WEEK:
				if (duration.getDl() > 1000) {
					error("Deadline longer than 1 year not allowed", null);
				}
				break;
			}
		}
	}
	
	@Check
	void checkDoublePersons(Planning planning) {
		EList<Person> plist = planning.getPersons();
		for (int i = 0; i < plist.size(); i++) {
			for (int j = i + 1; j < plist.size(); j++) {
				if (plist.get(i).getName().equals(plist.get(j).getName())) {
					error("Double name", null);
				}
			}
		}
	}

}
